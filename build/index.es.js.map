{"version":3,"file":"index.es.js","sources":["../node_modules/tslib/tslib.es6.js","../src/Icons/utils/utils.ts","../src/Icons/Done.tsx","../src/Icons/Copy.tsx","../src/Components/ClipBoard.tsx","../src/Components/utils.highlight.ts","../src/Components/Highlighter.tsx"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { IconProps } from \"../IconProps\";\r\n\r\nexport const parseSize = (sizeStr: IconProps[\"size\"]): number => {\r\n    switch (sizeStr) {\r\n        case \"micro\":\r\n            return 8;\r\n        case \"small\":\r\n            return 15;\r\n        case \"semi-medium\":\r\n            return 18;\r\n        case \"medium\":\r\n            return 25;\r\n        case \"large\":\r\n            return 28;\r\n        default:\r\n            return 24;\r\n    }\r\n}","import React, { FC } from \"react\";\r\nimport { DoneProps } from \"./DoneProps\";\r\nimport { parseSize } from \"./utils/utils\";\r\n\r\nconst Done: FC<DoneProps> = (props: DoneProps) => {\r\n  const {\r\n    size,\r\n    color,\r\n    colorFill = \"none\",\r\n    onClick,\r\n    style = {},\r\n    className,\r\n  } = props;\r\n  const finalSize = parseSize(size);\r\n  return (\r\n    <svg\r\n      style={onClick ? { ...{ cursor: \"pointer\", ...style } } : style}\r\n      onClick={() => onClick?.()}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      //enableBackground=\"new 0 0 24 24\"\r\n      height={`${finalSize}px`}\r\n      viewBox=\"0 0 24 24\"\r\n      width={`${finalSize}px`}\r\n      fill={color ? color : \"#000000\"}\r\n      className={className || \"\"}\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill={colorFill} />\r\n      <path d=\"M19.77 4.93l1.4 1.4L8.43 19.07l-5.6-5.6 1.4-1.4 4.2 4.2L19.77 4.93m0-2.83L8.43 13.44l-4.2-4.2L0 13.47l8.43 8.43L24 6.33 19.77 2.1z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport default Done;\r\n","import React, { FC } from \"react\";\r\nimport { copyProps } from \"./CopyProps\";\r\nimport { parseSize } from \"./utils/utils\";\r\n\r\nconst Copy: FC<copyProps> = (props: copyProps) => {\r\n  const { size, color, colorFill = \"none\", onClick, style, className } = props;\r\n  const finalSize = parseSize(size);\r\n  const finalStyle = style ? style : {};\r\n  return (\r\n    <svg\r\n      style={onClick ? { ...{ cursor: \"pointer\", ...finalStyle } } : finalStyle}\r\n      onClick={() => onClick?.()}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      enableBackground=\"new 0 0 24 24\"\r\n      height={`${finalSize}px`}\r\n      viewBox=\"0 0 24 24\"\r\n      width={`${finalSize}px`}\r\n      fill={color ? color : \"#000000\"}\r\n      className={className || \"\"}\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill={colorFill} />\r\n      <path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport default Copy;\r\n","import React, { Fragment, useState } from \"react\";\r\n\r\nimport Done from \"../Icons/Done\";\r\nimport Copy from \"../Icons/Copy\";\r\n\r\nconst Clipboard = ({\r\n  code = \"no code\",\r\n  onCopyToClipboard = (_code: string) => {},\r\n}) => {\r\n  //const { code = \"no code\" } = props;\r\n  const [copied, setCopied] = useState(false);\r\n  const changeIcon = () => {\r\n    setCopied(true);\r\n    setTimeout(() => {\r\n      setCopied(false);\r\n    }, 2800);\r\n  };\r\n  function fallbackCopyTextToClipboard(text: string) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n      var successful = document.execCommand(\"copy\");\r\n      var msg = successful ? \"successful\" : \"unsuccessful\";\r\n      if (successful) {\r\n        changeIcon();\r\n        onCopyToClipboard?.(code);\r\n      }\r\n      console.log(\"Fallback: Copying text command was \" + msg);\r\n    } catch (err) {\r\n      console.error(\"Fallback: Oops, unable to copy\", err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n  }\r\n  function copyTextToClipboard(text: string) {\r\n    if (!navigator.clipboard) {\r\n      fallbackCopyTextToClipboard(text);\r\n      return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(\r\n      function () {\r\n        changeIcon();\r\n        onCopyToClipboard?.(code);\r\n\r\n        console.log(\"Async: Copying to clipboard was successful!\");\r\n      },\r\n      function (err) {\r\n        console.error(\"Async: Could not copy text: \", err);\r\n      },\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        onClick={() => copyTextToClipboard(code)}\r\n        className={\r\n          copied ? \"floating-copy-button copied\" : \"floating-copy-button\"\r\n        }\r\n      >\r\n        {copied ? <Done color=\"greenyellow\" /> : <Copy color=\"white\" />}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Clipboard;\r\n","\r\nexport type CodeLine = JSX.Element;\r\nexport type Line = Token[];\r\n\r\nexport interface Token {\r\n    token: string;\r\n    category: string;\r\n    level?: 1 | 2 | 3 | 0;\r\n}\r\nconst highKeywords = [\r\n    \"import\",\r\n    \"from\",\r\n    \"return\",\r\n    \"if\",\r\n    \"else\",\r\n    \"switch\",\r\n    \"default\",\r\n    \"export\",\r\n]\r\nconst keywords = [\r\n    \"class\",\r\n    \"extends\",\r\n    \"this\",\r\n    \"super\",\r\n    \"function\",\r\n    \"null\",\r\n    \"var\",\r\n    \"let\",\r\n    \"const\",\r\n    \"typeof\",\r\n    \"interface\",\r\n    \"type\", \"false\"\r\n];\r\nexport const tokens = [\r\n    \"keyword\",\r\n    \"className\",\r\n    \"punctuation\",\r\n    \"function\",\r\n    \"parameter\",\r\n    \"operator\",\r\n    \"number\",\r\n    \"attributeName\",\r\n    \"default\",\r\n];\r\nconst punctuation: string[] = [\r\n    \".\",\r\n    \",\",\r\n    \";\",\r\n    \":\",\r\n    \"<\",\r\n    \">\",\r\n    \"=\",\r\n    \"!=\",\r\n    \"<=\",\r\n    \">=\",\r\n    \"===\",\r\n    \"!==\",\r\n    \">=\",\r\n    \"/\",\r\n    \"!\",\r\n    \"+\",\r\n    \"*\"\r\n];\r\nconst arrow: string[] = [\r\n    \">=\",\r\n    \"=>\",\r\n    \"<=\",\r\n    \"!=\",\r\n    \"===\",\r\n    \"!==\",\r\n    \">=\",\r\n    \"!\"\r\n]\r\nconst openSymbols: string[] = [\r\n    \"(\",\r\n    \"{\",\r\n    \"[\",\r\n];\r\nconst closeSymbols: string[] = [\r\n    \")\",\r\n    \"}\",\r\n    \"]\",\r\n];\r\n\r\nexport const isClassName = (word: string) => {\r\n    return /[A-Z]/.test(word[0]);\r\n};\r\nexport const isHighKeyWord = (word: string) => {\r\n    return highKeywords.includes(word);\r\n};\r\nexport const isKeyWord = (word: string) => {\r\n    return keywords.includes(word);\r\n};\r\nexport const isPunctuation = (word: string) => {\r\n    return punctuation.includes(word);\r\n};\r\nexport const isArrow = (word: string) => {\r\n    return arrow.includes(word);\r\n};\r\nexport const isOpenSymbol = (word: string) => {\r\n    return openSymbols.includes(word);\r\n};\r\nexport const isCloseSymbol = (word: string) => {\r\n    return closeSymbols.includes(word);\r\n};\r\n/**\r\n * Makes a Token \r\n * @param token the string representation of the token\r\n * @param category the category of the token\r\n * @param isFunction wheter is a function and must take this category\r\n * @param openString wheter is part of a large splted string and must take this category\r\n * @returns a token\r\n */\r\nexport const makeToken = (\r\n    token: string,\r\n    category: string,\r\n    isFunction?: boolean,\r\n    openString?: boolean\r\n): Token => {\r\n    let tokenToken: Token;\r\n\r\n    if (openString) {\r\n        tokenToken = { token: token, category: \"string\" };\r\n    }\r\n    else if (isFunction) {\r\n        tokenToken = { token: token, category: \"function\" };\r\n    } else {\r\n        tokenToken = { token: token, category: category };\r\n\r\n    }\r\n    //console.log(\"make:\", tokenToken);\r\n    return tokenToken;\r\n}\r\n/**\r\n * @var a flag used to check whether a large splited string is being analyzed\r\n */\r\nlet openString: boolean = false;\r\n/**\r\n * \r\n * @param word a word to be analized for punctuation and strings\r\n * @returns \r\n */\r\nexport const TOKENIZE = (\r\n    currentWord: string\r\n): Token[] => {\r\n    let tokenArray: Token[] = [];\r\n    //identif string\r\n    //for each character\r\n    let acumword = \"\";\r\n    let isFunction = false;\r\n    let i = 0;\r\n    // in the future search for the pattern\r\n    // string =              `${var} `\r\n    //           symbol symbol  parameter symbol \r\n    if (currentWord.charAt(0) === \"\\\"\" || currentWord.charAt(0) === \"\\'\" || currentWord.charAt(0) === \"\\`\") {\r\n        let tokenPrev: Token = makeToken(currentWord, \"string\");\r\n        return [tokenPrev];\r\n    }\r\n    for (; i < currentWord.length; i++) {\r\n        //go along in chars\r\n        let currentCharacter = currentWord.charAt(i);\r\n\r\n        if (isPunctuation(currentCharacter)) {\r\n            //PUNCTUATION\r\n\r\n            let tokenPrev: Token =\r\n                makeToken(acumword, \"\", false, openString);\r\n            tokenArray.push(tokenPrev);\r\n            acumword = \"\";\r\n\r\n            if (currentCharacter === \".\" && tokenArray[tokenArray.length - 1].token.length > 0) {\r\n                //I found an object and a function\r\n                isFunction = true;\r\n                tokenArray[tokenArray.length - 1].category = \"parameter\";\r\n                tokenArray[tokenArray.length - 1].token = tokenArray[tokenArray.length - 1].token.split(\" \")[0];\r\n            }\r\n\r\n            // Now I add the \".\"\r\n            let token: Token = //{ token: currentCharacter, category: \"punctuation\" };\r\n                makeToken(currentCharacter, \"punctuation\", false, openString);\r\n            tokenArray.push(token);\r\n        } else if (isCloseSymbol(currentCharacter) || isOpenSymbol(currentCharacter)) {\r\n            //                          SYMBOL\r\n            let tokenPrev: Token = //{ token: acumword + \" \", category: \"\" };\r\n                makeToken(acumword, \"\", isFunction, openString);\r\n            tokenArray.push(tokenPrev);\r\n            acumword = \"\";\r\n\r\n            if (currentCharacter === \"(\" && tokenArray[tokenArray.length - 1].token.length > 0) {\r\n                tokenArray[tokenArray.length - 1].category = \"function\";\r\n            }\r\n\r\n            let token: Token = //{ token: currentCharacter, category: \"symbol\" };\r\n                makeToken(currentCharacter, \"symbol\", false, openString);\r\n            tokenArray.push(token);\r\n        } else {\r\n            //                  SIMPLE WORD\r\n            //continue accumulating\r\n            acumword += currentCharacter;\r\n        }\r\n    }\r\n    let tokenPrev: Token = { token: acumword, category: \"\" };\r\n    makeToken(acumword, \"\", isFunction);\r\n    tokenArray.push(tokenPrev);\r\n    //check for functions\r\n    for (let i = 0; i < tokenArray.length - 1; i++) {\r\n        if (tokenArray[i].token.includes(\".\") && tokenArray[i + 1].token === \"\") {\r\n            tokenArray[i + 1].category = \"function\";\r\n        }\r\n    }\r\n    return tokenArray;\r\n}\r\n/**\r\n * \r\n * @param line \r\n * @returns \r\n */\r\nexport const tokenizeLine = (\r\n    line: string\r\n): Line => {\r\n    let tokenArray: Token[] = [];\r\n\r\n    //separate for whitespaces\r\n    let words: string[];//= line.split(\" \");\r\n    // console.log(\"===>\",words);\r\n    let superWords: string[] = [];\r\n    let strSymbol: string = \"\";\r\n    let acumWord = \"\";\r\n    for (let i = 0; i < line.length; i++) {\r\n        let currentChar = line[i];\r\n\r\n        if (currentChar === \"\\\"\" || currentChar === \"\\'\" || currentChar === \"\\`\") {\r\n            strSymbol = currentChar;\r\n            if (acumWord.length > 0) {\r\n                superWords.push(acumWord);\r\n                //console.log(\"wors\", acumWord,currentChar);\r\n                acumWord = \"\";\r\n            }\r\n            //better capture the entire string\r\n            acumWord += currentChar;\r\n            let j = i + 1;\r\n            while (1) {\r\n                let currentChar2 = line[j];\r\n                if (currentChar2 === strSymbol) {\r\n                    acumWord += currentChar2;\r\n                    superWords.push(acumWord);\r\n                    // console.log(\"wors\", acumWord,currentChar);\r\n                    acumWord = \"\";\r\n                    break;\r\n                } else {\r\n                    acumWord += currentChar2;\r\n                    j++;\r\n                }\r\n            }\r\n            i = j;\r\n        } else if (currentChar === \" \") {\r\n            //console.log(\"ws\");\r\n            superWords.push(acumWord);\r\n            acumWord = \"\";\r\n            //console.log(\"words\", acumWord,currentChar);\r\n            superWords.push(\" \");\r\n            acumWord = \"\";\r\n\r\n            //i=i+2;\r\n        } else if (currentChar.length === 0) {\r\n            //console.log(\"empty\");\r\n            //acumWord += \" \";\r\n        } else {\r\n            acumWord += currentChar;\r\n        }\r\n\r\n    }\r\n    superWords.push(acumWord);\r\n    words = superWords;\r\n\r\n    //for each word\r\n    for (let i = 0; i < words.length; i++) {\r\n        // a word aftersplited by \" \"\r\n        let currentWord = words[i];\r\n        if (isKeyWord(currentWord)) {\r\n            let tokenPrev: Token = { token: currentWord, category: \"keyword\" };\r\n            // makeToken( currconsoleentWord + \" \",\"\",isFunction);\r\n            tokenArray.push(tokenPrev);\r\n        } else if (isHighKeyWord(currentWord)) {\r\n            let tokenPrev: Token = { token: currentWord, category: \"high-keyword\" };\r\n            //makeToken( currentWord + \" \",\"\",isFunction);\r\n            tokenArray.push(tokenPrev);\r\n        } else if (isArrow(currentWord)) {\r\n            let tokenPrev: Token = { token: currentWord, category: \"punctuation\" };\r\n            //makeToken( currentWord + \" \",\"\",isFunction);\r\n            tokenArray.push(tokenPrev);\r\n        } else {\r\n            //punctuation\r\n            tokenArray = [...tokenArray, ...TOKENIZE(currentWord)];\r\n        }\r\n    }\r\n    for (let i = 0; i < tokenArray.length; i++) {\r\n        if (tokenArray[i].token === \"/\") {\r\n\r\n            if (tokenArray[i + 1] && tokenArray[i + 2] && tokenArray[i + 2].token === \"/\") {\r\n\r\n                for (let j = i; j < tokenArray.length; j++) {\r\n                    tokenArray[j].category = \"comment\";\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //go along tokens array and find classes\r\n    for (let i = 0; i < tokenArray.length; i++) {\r\n        let token: Token = tokenArray[i];\r\n        if (isClassName(token.token)) {\r\n            let j = i - 1;\r\n            while (1) {\r\n                if (tokenArray[j].token !== \" \" && j > 0) {\r\n                    break;\r\n                }\r\n                j--;\r\n            }\r\n            if (j >= 0 && tokenArray[j].token === \"import\") {\r\n                token.category = \"parameter\";\r\n            } else if (j >= 0 && ([\"const\", \"function\"].includes(tokenArray[j].token))) {\r\n                token.category = \"function\";\r\n            } else {\r\n                token.category = \"class-name\";\r\n            }\r\n        }\r\n        if (\"<\" == (token.token)) {\r\n            if (tokenArray[i + 1]) {\r\n                tokenArray[i + 1].category = \"tag\";\r\n            }\r\n        }\r\n        if (\"<\" == (token.token) && tokenArray[i + 1] && tokenArray[i + 2] && tokenArray[i + 2].token === \"/\") {\r\n            if (tokenArray[i + 3]) {\r\n                tokenArray[i + 3].category = \"tag\";\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return tokenArray;\r\n}\r\n/**\r\n * Splits the code into lines\r\n * \r\n * For each line first splits by punctuation and strings\r\n * Also maintains whitespaces\r\n * \r\n * After that, searchs for keywords\r\n * \r\n * Tags with Classes and HTML-tags\r\n * @param code The entie code to be highlighted\r\n */\r\nexport const superHighlighter = (\r\n    code: string\r\n): Line[] => {\r\n\r\n\r\n    //split in lines\r\n    const lines: string[] = code.split(\"\\n\");\r\n\r\n    //separate by punctuation\r\n    let punctuationSeparated: Line[] = [];\r\n\r\n    //For each line tokenize\r\n    for (let i = 0; i < lines.length; i++) {\r\n        let currentLine = lines[i];\r\n        let tokenArray = tokenizeLine(currentLine);\r\n\r\n        punctuationSeparated.push(tokenArray);\r\n    }\r\n\r\n    return punctuationSeparated;\r\n}\r\n\r\n\r\n","import React, { Fragment } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Clipboard from \"./ClipBoard\";\r\n\r\nimport \"./Highlighter.scss\";\r\nimport { HighLighterProps } from \"./HighLighterProps\";\r\nimport {\r\n  Line,\r\n  Token,\r\n  superHighlighter,\r\n  isOpenSymbol,\r\n  isCloseSymbol,\r\n} from \"./utils.highlight\";\r\n\r\nconst HighLighter = (props: HighLighterProps) => {\r\n  const { code, style, children ,onCopyToClipboard} = props;\r\n  //const [bracketLevel, setBracketLevel] = useState(0);\r\n  // const [commentBlock, setCommentBlock] = useState(false);\r\n  const [codeHighlighted, setCodeHighlighted] = useState(<></>);\r\n  useEffect(() => {\r\n    if (children && children.length > 0) {\r\n      tokenize(children);\r\n    } else {\r\n      tokenize(code || \"\");\r\n    }\r\n  }, [code, children]);\r\n  const tokenize = (code: string): void | React.ReactNode => {\r\n    let listOfLines: Line[] = superHighlighter(code);\r\n\r\n    let listOfCode: React.ReactNode[] = [];\r\n    for (let i = 0; i < listOfLines.length; i++) {\r\n      let tokenList: Token[] = listOfLines[i];\r\n      let lineSpan: React.ReactNode = tokenizeSpan(tokenList, i);\r\n      listOfCode.push(lineSpan);\r\n    }\r\n\r\n    setCodeHighlighted(\r\n      <code key={7}> {listOfCode.map((codeLine) => codeLine)}</code>\r\n    );\r\n\r\n    //return <code> {listOfCode.map((codeLine) => codeLine)}</code>;\r\n  };\r\n  //const setLevelOfSymbol = (token: Token) => {};\r\n  /* findBlockComment = (tokenList: Token[], j: number) => {\r\n    let token: Token = tokenList[j];\r\n    if (\r\n      token.token === \"/\" &&\r\n      tokenList[j + 1]?.token === \"\" &&\r\n      tokenList[j + 2]?.token === \"*\"\r\n    ) {\r\n      // setCommentBlock(true);\r\n    }\r\n  };*/\r\n  /*const findFinalBlockComment = (tokenList: Token[], j: number) => {\r\n    let token: Token = tokenList[j];\r\n    if (\r\n      token.token === \"/\" &&\r\n      tokenList[j - 1]?.token === \"\" &&\r\n      tokenList[j - 2]?.token === \"*\"\r\n    ) {\r\n      //setCommentBlock(false);\r\n    }\r\n  };*/\r\n  let commentBlock: boolean = false;\r\n  let levelBracket: number = 1;\r\n  let openBrackets: number = 0;\r\n  function reduceOpenBrackets() {\r\n    if (openBrackets !== 0) {\r\n      openBrackets -= 1;\r\n    }\r\n  }\r\n  function incBrack() {\r\n    if (levelBracket !== 3) {\r\n      levelBracket += 1;\r\n    } else {\r\n      levelBracket = 1;\r\n    }\r\n  }\r\n  function decBrack() {\r\n    levelBracket -= 1;\r\n    if (levelBracket === 0) {\r\n      levelBracket = 3;\r\n    }\r\n  }\r\n  function levelbefore(__levelBracket: number) {\r\n    let _levelBracket = __levelBracket - 1;\r\n    if (_levelBracket === 0) {\r\n      _levelBracket = 3;\r\n    }\r\n    return _levelBracket;\r\n  }\r\n  const tokenizeSpan = (tokenList: Token[], key: number): React.ReactNode => {\r\n    let result: React.ReactNode;\r\n    //for each line I create a div\r\n    //for each token create a span\r\n    let listOfSpans: React.ReactNode[] = [];\r\n    //let block: boolean = commentBlock;\r\n    //console.log(\"found found \", block);\r\n    for (let j = 0; j < tokenList.length; j++) {\r\n      let spanClassName = \"token\";\r\n      let token: Token = tokenList[j];\r\n      /*  if(!commentBlock){\r\n        findBlockComment(tokenList,j);\r\n      } */\r\n      if (\r\n        !commentBlock &&\r\n        token.token === \"/\" &&\r\n        //tokenList[j + 1]?.token === \"\" &&\r\n        tokenList[j + 2]?.token === \"*\"\r\n      ) {\r\n        commentBlock = true;\r\n      }\r\n\r\n      ////\r\n      if (isCloseSymbol(token.token)) {\r\n        reduceOpenBrackets();\r\n        spanClassName = `token symbol-${levelbefore(levelBracket)}`;\r\n        decBrack();\r\n        //  console.log( \"Log:\" + token.token,  \"level: \" + levelBracket,  \"openBrac: \" + openBrackets,   spanClassName );\r\n      } else if (isOpenSymbol(token.token)) {\r\n        openBrackets++;\r\n        spanClassName = `token symbol-${levelBracket}`;\r\n        incBrack();\r\n        // console.log( \"Log:\" + token.token,  \"level: \" + levelBracket,  \"openBrac: \" + openBrackets,   spanClassName );\r\n      } else if (token.category !== \"\") {\r\n        spanClassName += ` ${token.category}`;\r\n      }\r\n      if (token.token.length > 0) {\r\n        listOfSpans.push(\r\n          <span\r\n            key={j}\r\n            className={commentBlock ? \"token comment\" : spanClassName}\r\n          >\r\n            {token.token}\r\n          </span>\r\n        );\r\n      }\r\n\r\n      if (\r\n        commentBlock &&\r\n        token.token === \"/\" &&\r\n        tokenList[j - 1]?.token === \"\" &&\r\n        tokenList[j - 2]?.token === \"*\"\r\n      ) {\r\n        commentBlock = false;\r\n      }\r\n    }\r\n\r\n    result = <div key={key}>{listOfSpans.map((spanToken) => spanToken)}</div>;\r\n    return result;\r\n  };\r\n  //const codeHighlighted = tokenize(code || \"\");\r\n  const handleCopyToClipboard=(_code:string)=>{\r\n    onCopyToClipboard?.(_code);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {(children || code) &&\r\n        (code?.length > 0 || (children as string).length > 0) && (\r\n          <div\r\n            data-testid=\"highlighter-container\"\r\n            style={style}\r\n            className=\"highlighter-container\"\r\n          >\r\n            <Clipboard code={children || code || \"\"} onCopyToClipboard={handleCopyToClipboard}/>\r\n\r\n            <>{codeHighlighted}</>\r\n          </div>\r\n        )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HighLighter;\r\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__spreadArray","to","from","pack","ar","l","Array","slice","concat","parseSize","sizeStr","Done","props","size","color","_a","colorFill","onClick","_b","style","className","finalSize","React","cursor","xmlns","height","viewBox","width","fill","d","Copy","finalStyle","enableBackground","Clipboard","code","_c","onCopyToClipboard","_code","_d","useState","copied","setCopied","changeIcon","setTimeout","copyTextToClipboard","text","navigator","clipboard","writeText","then","console","log","err","error","textArea","document","createElement","value","top","left","position","body","appendChild","focus","select","successful","execCommand","msg","removeChild","fallbackCopyTextToClipboard","Fragment","highKeywords","keywords","punctuation","arrow","openSymbols","closeSymbols","isClassName","word","test","isHighKeyWord","includes","isArrow","isOpenSymbol","isCloseSymbol","makeToken","token","category","isFunction","openString","TOKENIZE","currentWord","tokenArray","acumword","charAt","currentCharacter","tokenPrev_2","push","split","tokenPrev_3","tokenPrev","i_1","tokenizeLine","line","words","superWords","strSymbol","acumWord","currentChar","j","currentChar2","HighLighter","children","codeHighlighted","setCodeHighlighted","useEffect","tokenize","listOfLines","lines","punctuationSeparated","currentLine","superHighlighter","listOfCode","tokenList","lineSpan","tokenizeSpan","key","map","codeLine","commentBlock","levelBracket","_levelBracket","listOfSpans","spanClassName","spanToken"],"mappings":"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"}